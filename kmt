#!/bin/zsh

PATHTODB="$HOME/.local/share/kissmytask/database.db"
PATHTO="$HOME/.local/share/kissmytask/"

## Add task

## Custom date and type
if [ $1 = "act" ] && ! [ -z "$2" ] && ! [ -z "$3" ] && ! [ -z "$4" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) \
	VALUES ('$2', '$5', datetime('$4 23:59:00'), '$3');"

## This day
elif [ $1 = "atd" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) \
	VALUES ('$2', '$3', datetime('now', 'localtime', 'start of day', '+1 days', '-1 minute'), 'day')"

## This week
elif [ $1 = "atw" ] && ! [ -z "$2"]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('now', 'localtime', 'start of day', 'weekday 6', '+1 day', '-1 minute'), 'week')"

## This month
elif [ $1 = "atm" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('now', 'localtime', 'start of month', '+1 months', '-1 minute'), 'month')"

## This year
elif [ $1 = "aty" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('now', 'localtime', 'start of year', '+1 years', '-1 minute'), 'year')"

## Next day
elif [ $1 = "and" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('now', 'localtime', 'start of day', '+2 days', '-1 minute'), 'day')"

## Next week
elif [ $1 = "anw" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('now', 'localtime', 'start of day', 'weekday 6', '+8 day', '-1 minute'), 'week')"

## Next month
elif [ $1 = "anm" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('now', 'localtime', 'start of month', '+2 months', '-1 minute'), 'month')"

## Next year
elif [ $1 = "any" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('now', 'localtime', 'start of year', '+2 years', '-1 minute'), 'year')"

## Life
elif [ $1 = "al" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "INSERT INTO tasks (title, desc, dateTo, type) VALUES \
	('$2', '$3', datetime('2079-12-31 23:59:00'), 'life')"

## End of add tasks section

## Delete task by rowid

elif [ $1 = "dt" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB "DELETE FROM tasks WHERE rowid = $2"

## End of delete task section

## View tasks

## Castom date and type
elif [ $1 = "vct" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('$3 23:59:00') AND type = '$2';"

## This day
elif [ $1 = "vtd" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of day', '+1 day', '-1 minute') \
	AND type = 'day' and isCompleted IS NULL;"

## This week
elif [ $1 = "vtw" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of day', 'weekday 6', '+1 day', '-1 minute') \
	AND type = 'week' and isCompleted IS NULL;"

## This month
elif [ $1 = "vtm" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of month', '+1 months', '-1 minute') \
	AND type = 'month' and isCompleted IS NULL;"

## This year
elif [ $1 = "vty" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of year', '+1 years', '-1 minute') \
	AND type = 'year' and isCompleted IS NULL;"

## Next day
elif [ $1 = "vnd" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of day', '+2 day', '-1 minute') \
	AND type = 'day' and isCompleted IS NULL;"

## Next week
elif [ $1 = "vnw" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of day', 'weekday 6', '+8 day', '-1 minute') \
	AND type = 'week' and isCompleted IS NULL;"

## Next month
elif [ $1 = "vnm" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of month', '+2 months', '-1 minute') \
	AND type = 'month' and isCompleted IS NULL;"

## Next year
elif [ $1 = "vny" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE dateTo = \
	datetime('now', 'localtime', 'start of year', '+2 years', '-1 minute') \
	AND type = 'year' and isCompleted IS NULL;"

## Next year
elif [ $1 = "vl" ]; then
	sqlite3 -batch $PATHTODB "SELECT rowid, title FROM tasks WHERE \
	type = 'life' AND isCompleted IS NULL;"

## End of view tasks section

## View task's description

elif [ $1 = "vd" ] && ! [ -z "$2" ]; then
	sqlite3 -batch $PATHTODB ".mode list" "SELECT desc FROM tasks WHERE rowid = $2;"

## End of view task's description section

## Update tasks

## Update status completed tasks
elif [ $1 = "ct" ]; then
	sqlite3 -batch $PATHTODB "UPDATE tasks SET isCompleted = 1 where rowid = $2;"

## Update type and date
elif [ $1 = "ut" ] && ! [ -z "$2" ] && ! [ -z "$3" ] && ! [ -z "$4" ]; then
	sqlite3 -batch $PATHTODB "UPDATE tasks SET type = '$3', dateTo = \
	datetime('$4 23:59:00') WHERE rowid = $2;"

## End of update tasks section

## Update status expired tasks

## Day
elif [ $1 = "ud" ]; then
	sqlite3 -batch $PATHTODB "UPDATE tasks SET isExpired = 1, dateTo = \
	datetime('now', 'localtime', 'start of day', '+1 day', '-1 minute') \
	WHERE dateTo < datetime('now', 'localtime', 'start of day') \
	AND type = 'day' AND isCompleted IS NULL;"
	kmt atd "Do 10 push-ups"
	kmt atd "Do 10 squats"
	kmt atd "Read 10 pages"

## Week
elif [ $1 = "uw" ]; then
	sqlite3 -batch $PATHTODB "UPDATE tasks SET isExpired = 1, dateTo = \
	datetime('now', 'localtime', 'start of day', 'weekday 6', '+1 day', '-1 minute') \
	WHERE dateTo < datetime('now', 'localtime', 'start of day') \
	AND type = 'week' AND isCompleted IS NULL;"

## Month
elif [ $1 = "um" ]; then
	sqlite3 -batch $PATHTODB "UPDATE tasks SET isExpired = 1, dateTo = \
	datetime('now', 'localtime', 'start of month', '+1 month', '-1 minute') \
	WHERE dateTo < datetime('now', 'localtime', 'start of day') \
	AND type = 'month' AND isCompleted IS NULL;"

## Year
elif [ $1 = "uy" ]; then
	sqlite3 -batch $PATHTODB "UPDATE tasks SET isExpired = 1, dateTo = \
	datetime('now', 'localtime', 'start of year', '+1 year', '-1 minute') \
	WHERE dateTo < datetime('now', 'localtime', 'start of day') \
	AND type = 'year' AND isCompleted IS NULL;"

## End of update status expired tasks section

## System methods

## Init
elif [ $1 = "init" ]; then
	if ! [ -f "$PATHTODB" ]; then
		mkdir -p $PATHTO
		touch $PATHTODB
		sqlite3 -batch $PATHTODB "CREATE TABLE IF NOT EXISTS tasks \
		(title TEXT NOT NULL, desc TEXT, dateTo DATETIME NOT NULL, \
		type TEXT NOT NULL, isExpired BOOLEAN, isCompleted BOOLEAN);"
	else
		echo "Database is exists. Exec clenup before."
	fi

## Backup
elif [ $1 = "backup" ]; then
	cp $PATHTODB ./database_$(date '+%Y-%m-%d').db

## Recovery from backup
elif [ $1 = "recovery" ]; then
	if ! [ -z $2 ]; then
		cp $2 $PATHTODB
	fi

## Delete
elif [ $1 = "delete"] && [ $2 = "yes_I_am_sure" ]; then
	rm -r $PATHTO

## End of system methods section
fi

